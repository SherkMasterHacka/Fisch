repeat wait()
until game:IsLoaded() 

print("Loaded")

wait(1)
if game.CoreGui:FindFirstChild("ScreenGui") then
	game.CoreGui:FindFirstChild("ScreenGui"):Destroy()
end
local repo = 'https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local ProjectName = "[ðŸŽƒ] Fisch"
local filename = "Fenril Hub/SaveSettings/"..ProjectName.."/" .. tostring(game.Players.LocalPlayer.UserId) ..".json"
local Window = Library:CreateWindow({

	Title = '[ðŸŽƒ] Fisch',
	Center = true,
	AutoShow = true,
	TabPadding = 8,
	MenuFadeTime = 0.2
})

function Slash(Text)
	return "[ "..Text.." ]"
end

local HttpService = game:GetService("HttpService")

getgenv().SaveSettings = getgenv().SaveSettings or {
	["Main"] = true,
}

function loadcheck()
	if readfile and writefile and isfile and isfolder then
		if not isfolder("Fenril Hub ") then
			makefolder("Fenril Hub ")
		end
		if not isfolder("Fenril Hub/SaveSettings") then
			makefolder("Fenril Hub/SaveSettings")
		end
		if not isfolder("Fenril Hub/SaveSettings/" .. ProjectName) then
			makefolder("Fenril Hub/SaveSettings/" .. ProjectName)
		end
		if not isfile(filename) then
			writefile(filename, HttpService:JSONEncode(SaveSettings))
		else
			local Decode = HttpService:JSONDecode(readfile(filename))
			for i,v in pairs(Decode) do
				SaveSettings[i] = v
			end
		end
	else
		warn("Failed Load")
		return false
	end
end

function Save()
	if readfile and writefile and isfile then
		if not isfile(filename) then
			Load()
		else
			local Decode = HttpService:JSONDecode(readfile(filename))
			local Array = {}
			for i,v in pairs(SaveSettings) do
				Array[i] = v
			end
			writefile(filename, HttpService:JSONEncode(Array))
		end
	else
		warn("Failed Save")
		return false
	end
end

loadcheck()
Save()



local HttpService = game:GetService("HttpService")

function GetIndex(Table,Value)
	for i,v in pairs(Table) do
		if v == Value then
			return i 
		end
	end
	return 1
end

function CallbackToggle(Path)

	Toggles[Path]:OnChanged(function()
		if Path == "Show GUID" then
			if Toggles[Path].Value == true then 
				for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Windows.Pets.PetList:GetChildren()) do 
					if v:IsA("Frame") then 
						v:FindFirstChild("PetFrame"):FindFirstChild("PetName").NameText.Text = v:FindFirstChild("PetFrame"):FindFirstChild("PetName").NameText.Text.." | "..v:GetAttribute("GUID")
					end
				end
			else 
				for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Windows.Pets.PetList:GetChildren()) do 
					if v:IsA("Frame") then 
						v:FindFirstChild("PetFrame"):FindFirstChild("PetName").NameText.Text = v:GetAttribute("PetId")
					end
				end
			end
		end
		getgenv().SaveSettings[Path] = Toggles[Path].Value
		Save()
	end)
end

function CreateToggle(Section,Name)
	-- local val1,val2 = string.gsub(Name, "%s+", "")
	Section:AddToggle(Name, {
		Text = Name,
		Default = getgenv().SaveSettings[Name], 
	}) CallbackToggle(Name)
end

local loaddedlist = {}

function DropdownCallback(Path,Value)
	Options[Path]:OnChanged(function()
		if _G.SelectEnemies then 
			table.clear(_G.SelectEnemies)
		end
		getgenv().SaveSettings[Path] = Options[Path].Value
		Save()
	end)

end

function CreateDropdown(Section,Name,Value,MultiVal)
	Section:AddDropdown(Name, {
		Text = Name.." : ",
		Multi = MultiVal,
		Values = Value,
		Default = GetIndex(Value,getgenv().SaveSettings[Name]),
	}) DropdownCallback(Name,Value)
end

function SliderCallback(Path)
	Options[Path]:OnChanged(function()
		getgenv().SaveSettings[Path] = Options[Path].Value
		Save()
	end)

	Options[Path]:SetValue(getgenv().SaveSettings[Path])
end

function CreateSlider(Section,Name,Min,Max)
	local suc,err = pcall(function()
		Section:AddSlider(Name, {
			Text = Name,
			Default = getgenv().SaveSettings[Name],
			Min = Min,
			Max = Max,
			Rounding = 0,

			Compact = false,
		})  SliderCallback(Name)
	end)
	if err then
		getgenv().SaveSettings[Name] = 1

		wait()

		Section:AddSlider(Name, {
			Text = Name,
			Default = getgenv().SaveSettings[Name],
			Min = Min,
			Max = Max,
			Rounding = 0,

			Compact = false,
		})  SliderCallback(Name)

	end

end

function getemoji()
	_G.World = "ðŸŒŽ"
	_G.TalentCoin = "ðŸ¥‡"
end

getemoji()

function AddLabel(Section,Name)
	local val = Section:AddLabel(Name)
	return val
end


local Tabs = {
	Main = Window:AddTab('Main'),

	Cham = Window:AddTab('Champions'),
	['UI Settings'] = Window:AddTab('UI Settings'),
}

local FrameTimer = tick()
local FrameCounter = 0;
local FPS = 60;

local WatermarkConnection = game:GetService('RunService').RenderStepped:Connect(function()
	FrameCounter += 1;

	if (tick() - FrameTimer) >= 1 then
		FPS = FrameCounter;
		FrameTimer = tick();
		FrameCounter = 0;
	end;

	Library:SetWatermark(('Fenril Hub | %s fps | %s ms'):format(
		math.floor(FPS),
		math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue())
		));
end);

Library.KeybindFrame.Visible = false; 

Library:OnUnload(function()
	WatermarkConnection:Disconnect()

	print('Unloaded!')
	Library.Unloaded = true
end)

-- UI Settings
local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')

MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'RightControl', NoUI = true, Text = 'Menu keybind' }) 

Library.ToggleKeybind = Options.MenuKeybind

ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

SaveManager:IgnoreThemeSettings()

SaveManager:SetIgnoreIndexes({ 'MenuKeybind' })

ThemeManager:SetFolder('MyScriptHub')
SaveManager:SetFolder('MyScriptHub/specific-game')

SaveManager:BuildConfigSection(Tabs['UI Settings'])

ThemeManager:ApplyToTab(Tabs['UI Settings'])

SaveManager:LoadAutoloadConfig()

Options.AccentColor:SetValueRGB(Color3.fromRGB(85,118,185))
Options.MainColor:SetValueRGB(Color3.fromRGB(28,28,28))
Options.OutlineColor:SetValueRGB(Color3.fromRGB(11,0,0))
Options.BackgroundColor:SetValueRGB(Color3.fromRGB(20,20,20))
Options.FontColor:SetValueRGB(Color3.fromRGB(255, 255, 255))

local MainSection = Tabs.Main:AddLeftGroupbox(Slash(" Main "))

CreateToggle(MainSection,"Auto Farm Fish") -- Section , Name


local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local autoCastEnabled = false
local connection
local loopRunning = false -- Added for tracking loop status

local function clientSideDetection()
	local reel = playerGui:FindFirstChild("reel")
	if not reel then return end

	local bar = reel:FindFirstChild("bar")
	if not bar then return end

	local playerbar = bar:FindFirstChild("playerbar")
	local fish = bar:FindFirstChild("fish")

	if playerbar and fish then
		playerbar.Position = fish.Position
	end
end

local function startTracking()
	if connection then connection:Disconnect() end
	connection = RunService.RenderStepped:Connect(clientSideDetection)
end

local function stopTracking()
	if connection then
		connection:Disconnect()
		connection = nil
	end
end

local function remote()
	local args = {
		[1] = 100
	}

	local remote = player.Character and player.Character:FindFirstChildOfClass("Tool") and player.Character:FindFirstChildOfClass("Tool").events.cast
	if remote then
		game:GetService("Workspace").world.npcs["Marc Merchant"].merchant.sellall:InvokeServer()
		remote:FireServer(unpack(args))
	else
		print("This game doesn't have the remote!")
	end
end

-- This function will keep casting until disabled
local function autoCastLoop()
	loopRunning = true
	while getgenv().SaveSettings["Auto Farm Fish"] do -- Loop while auto-casting is enabled
		remote() -- Fire the remote to cast
		wait(2) -- Adjust the wait time as needed for the game's cast delay
	end
	loopRunning = false
end

-- Toggle function to enable/disable auto-cast
local function toggleAutoCast()
	if getgenv().SaveSettings["Auto Farm Fish"] and not loopRunning then
		autoCastLoop() -- Start the loop only if it's not running already
	elseif not getgenv().SaveSettings["Auto Farm Fish"] then
		print("Auto-cast disabled.")
	end
end

-- Auto-farm fish toggle handling
playerGui.DescendantAdded:Connect(function(descendant)
	if getgenv().SaveSettings["Auto Farm Fish"] then
		if descendant.Name == "playerbar" and descendant.Parent and descendant.Parent.Name == "bar" then
			startTracking()
		end
	end
end)

playerGui.DescendantRemoving:Connect(function(descendant)
	if descendant.Name == "playerbar" and descendant.Parent and descendant.Parent.Name == "bar" then
		stopTracking()
		if getgenv().SaveSettings["Auto Farm Fish"] then
			wait(1)
			remote() -- Automatically re-cast after 1 second if auto-farm is on
		end
	end
end)

spawn(function()
    while wait() do 
       if getgenv().SaveSettings["Auto Farm Fish"] then 
        if playerGui:FindFirstChild("reel") and playerGui.reel:FindFirstChild("bar") and playerGui.reel.bar:FindFirstChild("playerbar") then
            startTracking()
        end
    end
    end 
end)


